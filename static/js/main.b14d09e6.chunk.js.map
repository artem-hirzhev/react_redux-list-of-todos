{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","initialValue","status","quary","filterReducer","filter","todos","todosReducer","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoItem","dispatch","isCurrent","id","className","classNames","completed","title","onClick","currentTodoActions","TodoList","visibleTodos","result","toLowerCase","includes","getVisibleTodos","length","map","TodoFilter","onSubmit","e","preventDefault","value","onChange","filterActions","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","isLoading","setIsLoading","user","setUser","useEffect","userId","finally","href","email","name","App","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b14d09e6.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQuaryAction = { type: 'filter/SET_QUARY', payload: string };\ntype SetStatusAction = { type: 'filter/SET_STATUS', payload: Status };\n\ntype Action = SetQuaryAction | SetStatusAction;\n\nconst setStatus = (status: Status): SetStatusAction => ({\n  type: 'filter/SET_STATUS',\n  payload: status,\n});\n\nconst setQuary = (quary: string): SetQuaryAction => ({\n  type: 'filter/SET_QUARY',\n  payload: quary,\n});\n\ntype Filter = {\n  status: Status;\n  quary: string;\n};\n\nconst initialValue: Filter = { status: 'all', quary: '' };\n\nconst filterReducer = (filter: Filter = initialValue, action: Action) => {\n  switch (action.type) {\n    case 'filter/SET_QUARY':\n      return { ...filter, quary: action.payload };\n\n    case 'filter/SET_STATUS':\n      return { ...filter, status: action.payload };\n\n    default:\n      return filter;\n  }\n};\n\nexport const actions = { setStatus, setQuary };\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET';\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nconst todosReducer = (todos: Todo[] = [], action: SetTodosAction): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n\n    default:\n      return todos;\n  }\n};\n\nexport const actions = { setTodos };\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import classNames from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const isCurrent = currentTodo?.id === todo.id;\n\n  const handleButtonClick = () => {\n    if (isCurrent) {\n      dispatch(currentTodoActions.removeTodo());\n\n      return;\n    }\n\n    dispatch(currentTodoActions.setTodo(todo));\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': isCurrent,\n      })}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames({\n            'has-text-danger': !todo.completed,\n            'has-text-success': todo.completed,\n          })}\n        >\n          {todo.title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={handleButtonClick}\n        >\n          <span className=\"icon\">\n            <i className={classNames('far',\n              {\n                'fa-eye': !isCurrent,\n                'fa-eye-slash': isCurrent,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const filter = useAppSelector(state => state.filter);\n\n  const getVisibleTodos = () => {\n    let result;\n\n    switch (filter.status) {\n      case 'active':\n        result = todos.filter(todo => !todo.completed);\n        break;\n\n      case 'completed':\n        result = todos.filter(todo => todo.completed);\n        break;\n\n      default:\n        result = todos;\n    }\n\n    return result.filter(todo => todo.title.toLowerCase().includes(filter.quary.toLowerCase()));\n  };\n\n  const visibleTodos = getVisibleTodos();\n\n  return (\n    <>\n      {!visibleTodos.length && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {visibleTodos.map(todo => (\n            <TodoItem key={todo.id} todo={todo} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const filter = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={e => e.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter.status}\n            onChange={\n              (e) => dispatch(\n                filterActions.setStatus(e.target.value as Status),\n              )\n            }\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={filter.quary}\n          placeholder=\"Search...\"\n          onChange={(e) => dispatch(filterActions.setQuary(e.target.value))}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {filter.quary && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(filterActions.setQuary(''))}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getUser(todo.userId)\n      .then(setUser)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && <Loader />}\n\n      {(!isLoading && user) && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(currentTodoActions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{todo.title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(result => dispatch(todosActions.setTodos(result)))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal todo={currentTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}